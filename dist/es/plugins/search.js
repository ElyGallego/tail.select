/*! pytesNET/rat.select | @version 1.0.0 | @license MIT | @copyright pytesNET <info@pytes.net> */
import e from"rat.select";const t={"build:after":function(){this.search=document.createElement("INPUT"),this.search.type="text",this.search.className="dropdown-search",this.search.placeholder=this.locale._("search"),this.dropdown.insertBefore(this.search,this.dropdown.children[0])},"bind:after":function(){this.search.addEventListener("input",this.handler)},"handle:before":function(e){if(!(e instanceof Event)||this.get("disabled"))return;if("input"!==e.type||e.target!==this.search)return;let t=e.target.value;if(t.length>=this.get("search.minimum",3)){let e=this.get("search.finder",this.options.finder);if(this.get("search.async")){let i=document.createElement("DIV");i.className="dropdown-spinner",this.dropdown.querySelector(".dropdown-inner").innerHTML=i.outerHTML,setTimeout((()=>{this.query(e,[t,this.get("search.config",["text","visible"])])}),250)}else this.query(e,[t,this.get("search.config",["text","visible"])])}else this.state("search")&&(this.state("search",!1),this.query())},open:function(){this.get("search.focus",!1)&&this.search.focus()}};e.Options.prototype.finder=function(e,t){this.state("search",!0);let i={};if(t.map((e=>i["regex"===e?"regexp":e]=!0)),this.get("search.linguistic")){let t=this.get("search.linguistic",{}),s=Object.keys(t).map((e=>s.push(`(${e}|[${t[e]}])`)));s.length>0&&(i.strict&&(s=s.concat(s.map((e=>e.toLocaleUpperCase())))),e=e.replace(new RegExp(s.join("|"),i.strict?"g":"gi"),(function(e){return s[[].indexOf.call(arguments,e,1)-1]})))}let s,r,n=e;return i.regexp?(n=i.comma?`(${n.split(",").map((e=>e.trim())).join("|")})`:n,n=i.whole?`\\b${n}\\b`:n,s=e=>new RegExp(n,i.strict?"m":"mi").test(e)):(n=i.strict?n.toLocaleLowerCase():n,s=t=>(t=i.strict?t.toLocaleLowerCase():t,i.comma?e.split(",").some((e=>e.trim().indexOf(t)>=0)):t.indexOf(e)>=0)),r=i.any?e=>s(e.innerText)||[].some.call(e.attributes,s):i.attr?e=>[].some.call(e.attributes,s):i.visible?e=>s(e.innerText)||s(e.dataset.description||""):e=>s(e.innerText),[].filter.call(this.source.options,(e=>r.call(this,e)))},e.Plugins.add("search",{async:!1,config:["text"],finder:null,focus:!1,linguistic:null,mark:!1,minimum:3},t),e.Strings.en.search="Tap to search...";
/*! Visit this project on https://rat.md/select */