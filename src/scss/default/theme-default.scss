//
//  DEFAULT DESIGN
//
@import "../base/_Functions";
@import "../base/_Mixins";
@import "../base/_Keyframes";
@import "../base/_Icons";
@import "_Config";


//
//  STYLES :: DEFAULT
//

/* @start GENERAL */
.tail-select-theme-name:after {
    content: "default-light"; // <theme-name>-<default-scheme>
}
.tail-select.theme-default {
    width: auto;
    margin: 0;
    padding: 0;
    display: inline-block;
    position: relative;
    font-size: $font-size;
    line-height: $font-height;
    font-family: $font-family;
    outline: none;
    box-sizing: border-box;
    @include prefix(user-select, none, true, true, true);

    *, *:before, *:after{
        box-sizing: border-box;
    }
    div, ul, li {
        width: 100%;
        margin: 0;
        padding: 0;
        display: block;
    }
    mark {
        @include worb(map-get($color-secondary, light));
        background-color: map-get($color-secondary, light);
    }
    button {
        height: auto;
        outline: 0;
        display: inline-block;
        text-shadow: none;
        font-weight: normal;
        letter-spacing: 0;
        text-transform: none;
        vertical-align: top;

        &.select-all, &.select-none {
            color: darken(white, 50%);
            margin: 1px 0;
            padding: 4px 7px;
            font-size: 85%;
            line-height: 1;
            border: 0;
            border-radius: $border-radius 0 0 $border-radius;
            box-shadow: none;
            transition: color 142ms linear, opacity 142ms linear, background 142ms linear;
            background-color: darken(white, 10%);
            
            &:hover {
                @include worb(map-get($color-primary, light));
                background-color: map-get($color-primary, light);
            }
        }
    }
    &.disabled button, button:disabled {
        &.select-all, &.select-none {
            color: darken(white, 25%);
            background-color: transparent;
        }
    }
    input[type='text'] {
        color: lighten(map-get($color-text, light), 10%);
        width: 100%;
        height: auto;
        margin: 0;
        padding: 10px 15px;
        display: inline-block;
        outline: 0;
        font-size: 90%;
        vertical-align: top;
        background-color: transparent;
        box-shadow: none;
        transition: color 142ms linear;
        @include border(0, solid, transparent, 0);

        &:hover {
            color: map-get($color-text, light);
        }
        &:focus {
            color: map-get($color-primary, light);
        }
    }
    &.disabled input[type='text'] {
        color: lighten(map-get($color-text, light), 20%);
    }
}
/* @end GENERAL */

/* @start LABEL */
.tail-select.theme-default .select-label {
    cursor: pointer;
    color: map-get($color-text, light);
    width: 100%;
    margin: 0;
    padding: 5px 30px 5px 10px;
    display: block;
    z-index: 20;
    position: relative;
    text-align: left;
    background-color: map-get($color-background, light);
    box-shadow: map-get($shadow-master, light);
    transition: background 142ms linear, box-shadow 142ms linear, z-index 0ms linear 142ms;
    @include border(0px, solid, transparent, $border-radius);
    
    &:after {
        top: 13px;
        right: 12px;
        width: 0;
        height: 0;
        margin: 0;
        padding: 0;
        z-index: 25;
        content: "";
        opacity: 0.5;
        display: inline-block;
        position: absolute;
        border-top: 5px dashed;
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        text-shadow: none;
        transition: opacity 142ms linear, transform 142ms linear;
    }
    .label-count, .label-inner {
        width: auto;
        margin: 0;
        text-align: left;
        vertical-align: top;
    }
    .label-count {
        float: left;
        color: map-get($color-text, light);
        margin: 0 5px 0 0;
        padding: 0 7px 0 0;
        font-size: 11.844px;
        font-weight: bold;
        text-shadow: none;
        white-space: nowrap;
        vertical-align: top;
        @include border(0px 1px 0 0, solid, transparent, 0px);
    }
    .label-inner {
        display: block;
        overflow: hidden;
        white-space: nowrap;    
        text-overflow: ellipsis;
    }
}
.tail-select.theme-default {
    &:hover .select-label, &:focus .select-label {
        z-index: 27;
        transition: z-index 0ms linear 0ms;
    }
    &:hover .select-label, &:focus .select-label, &.active .select-label {
        box-shadow: map-get($shadow-active, light);

        &:after {
            opacity: .85;
        }
        .label-count, .label-inner{
            opacity: 1.0;
        }
    }
    &.active .select-label {
        z-index: 30;

        &:after{
            opacity: 0.85;
            @include transform(rotate(180deg));
        }
    }
    &.disabled .select-label {
        cursor: not-allowed;
        box-shadow: map-get($shadow-disabled, light);
    }
}
/* @end LABEL */

/* @start DROPDOWN */
.tail-select.theme-default .select-dropdown {
    top: 100%;
    left: 0;
    color: map-get($color-text, light);
    height: auto;
    max-height: 0;
    margin-top: -1px;
    z-index: 25;
    overflow: hidden;
    position: absolute;
    background-color: map-get($color-background, light);
    transition: max-height 142ms linear;
    @include border(0px, solid, transparent, 0 0 $border-radius $border-radius);
    
    &.cloned {
        min-height: auto;
        max-height: none;
        opacity: 0;
        visibility: hidden;
    }
    .dropdown-search {
        position: relative;
        @include border(0 0 1px 0, solid, darken(map-get($color-background, light), 10%));
    }
    .dropdown-inner {
        position: relative;
        overflow-x: hidden;
        overflow-y: auto;
    }
    .dropdown-empty {
        color: lighten(map-get($color-text, light), 15%);
        padding: 16px 0;
        display: block;
        font-size: 95%;
        text-align: center;
        font-style: italic;
    }
    .dropdown-action {
        top: 3px;
        right: 15px;
        width: auto;
        margin: 0;
        padding: 7px 0;
        z-index: 35;
        display: inline-block;
        position: absolute;
        text-align: center;
    }
    ul, li {
        position: relative;
        list-style: none;
    }
    &.title-break {
        ul li {
            overflow: visible;
            white-space: normal;
            text-overflow: none;
        }
    }
    &.title-clip {
        ul li {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
    }
    &.title-scroll {
        ul li {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;

            &:hover span.option-title,
            &.hover span.option-title {
                @include animation(textscroll 2.0s infinite ease-in-out 250ms);
            }
        }
    }
    ul {
        li {
            color: map-get($color-text, light);
            padding: 7px 10px 7px 35px;
            font-size: 95%;
            text-align: left;
            font-weight: normal;
            text-shadow: none;
            background-color: map-get($color-background, light);

            &:first-of-type {
                margin-top: 7px;
            }
            &:last-of-type {
                margin-bottom: 7px;
            }
            &.optgroup-title {
                color: map-get($color-text, light);
                cursor: default;
                margin: 9px 0 0 0;
                padding-left: 10px;

                b {
                    font-weight: 600;
                }
                button {
                    float: right;
                    opacity: 0;
                }
                &.optgroup-sticky {
                    top: -1px;
                    z-index: 50;
                    position: sticky;

                    &.moving {
                        background-color: darken(map-get($color-background, light), 2.5%);
                        box-shadow: map-get($shadow-moving, light);
                    }
                }
            }
        }
        &:hover li.optgroup-title button {
            opacity: 1;
        }
    }

    // Dropdown Options
    li.dropdown-option {
        cursor: pointer;
        color: map-get($color-text, light);
        transition: color 250ms ease, background 250ms ease;

        &:before {
            top: 50%;
            left: 10px;
            width: 15px;
            height: 15px;
            margin: -7.5px 0 0 0;
            padding: 0;
            z-index: 21;
            display: inline-block;
            content: "";
            opacity: 0;
            position: absolute;
            vertical-align: top;
            background-repeat: no-repeat;
            background-position: center center;
            transition: opacity 250ms ease;
        }
        .option-description {
            color: lighten(map-get($color-text, light), 25%);
            width: auto;
            margin: 0;
            padding: 0;
            display: block;
            font-size: 10px;
            text-align: left;
            line-height: 14px;
            transition: color 250ms ease;
        }

        &:hover, &.hover {
            color: map-get($color-text, light);
            background-color: fadeout(map-get($color-primary, light), 92.5%);
        }
        &.disabled, &.hidden {
            cursor: not-allowed;
            color: fadeout(map-get($color-text, light), 50%);
            background-color: fadeout(map-get($color-text, light), 95.175%);

            .option-description {
                color: fadeout(map-get($color-text, light), 60%);
            }
        }
        &.selected {
            color: map-get($color-primary, light);

            .option-description {
                color: lighten(map-get($color-primary, light), 15%);
            }
        }
    }
}
.tail-select.theme-default {
    &.no-animation .select-dropdown {
        transition: none;
    }
    &.open-top .select-dropdown {
        top: auto;
        bottom: 100%;
        margin: 0;
        border-radius: $border-radius $border-radius 0 0;
    }
    &.active .select-dropdown {
        z-index: 29;
        box-shadow: map-get($shadow-master, light);
    }
}

// Dropdown States
.tail-select.theme-default {
    &.hide-selected .select-dropdown li.dropdown-option.selected,
    &.hide-disabled .select-dropdown li.dropdown-option.disabled,
    &.hide-hidden .select-dropdown li.dropdown-option.hidden {
        display: none;
    }

    // State :: Normal
    .select-dropdown li.dropdown-option {
        &:before {
            @include icon("select", map-get($color-text, light));
        }
        &:hover:before, &.hover:before {
            opacity: 0.5;
        }
    }
    &.multiple .select-dropdown li.dropdown-option {
        &:before {
            @include icon("m-select", map-get($color-text, light));
        }
    }

    // State :: Selected
    .select-dropdown li.dropdown-option.selected {
        &:before {
            opacity: 0.85;
            @include icon("selected", map-get($color-text, light));
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("m-selected", map-get($color-text, light));
        }
    }

    // State :: Deselect
    &.deselectable .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            opacity: 0.85;
            @include icon("deselect", map-get($color-text, light));
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("m-deselect", map-get($color-text, light));
        }
    }

    // State :: Disabled
    .select-dropdown li.dropdown-option.disabled,
    .select-dropdown li.dropdown-option.hidden {
        &:before {
            opacity: 0.5;
            @include icon("disabled", map-get($color-text, light));
        }
        &:hover:before, &.hover:before {
            opacity: 0.5;
        }
    }
    &.multiple .select-dropdown li.dropdown-option.disabled,
    &.multiple .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("m-disabled", map-get($color-text, light));
        }
    }
}

// Feather Icons
.tail-select.theme-default.scheme-light-feather {
    li.dropdown-option {
        &:before {
            width: 18px;
            height: 18px;
            margin: -9px 0 0 0;
        }
    }
    .select-dropdown li.dropdown-option {
        &:before {
            @include icon("select", map-get($color-text, light), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option {
        &:before {
            @include icon("m-select",  map-get($color-text, light), "feather");
        }
    }

    // State :: Selected
    .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("selected", map-get($color-text, light), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("m-selected", map-get($color-text, light), "feather");
        }
    }

    // State :: Deselect
    &.deselectable .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("deselect", map-get($color-text, light), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("m-deselect", map-get($color-text, light), "feather");
        }
    }

    // State :: Disabled
    .select-dropdown li.dropdown-option.disabled,
    .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("disabled", map-get($color-text, light), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.disabled,
    &.multiple .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("m-disabled", map-get($color-text, light), "feather");
        }
    }
}
/* @end DROPDOWN */


//
//  STYLES :: DARK
//

/* @start DARK :: GENERAL */
.tail-select.theme-default[class*='scheme-dark'] {
    button {
        &.select-all, &.select-none {
            color: darken(map-get($color-text, dark), 20%);
            background-color: darken(map-get($color-background, dark), 5%);

            &:hover {
                @include worb(map-get($color-primary, light));
                background-color: map-get($color-primary, light);
            }
        }
    }
    input[type='text'] {
        color: darken(map-get($color-text, dark), 15%);

        &:hover {
            color: map-get($color-text, dark);
        }
        &:focus {
            color: map-get($color-primary, dark);
        }
    }
    &.disabled input[type='text'] {
        color: darken(map-get($color-text, dark), 25%);
    }
}
/* @end DARK :: GENERAL */

/* @start DARK :: LABEL */
.tail-select.theme-default[class*='scheme-dark'] .select-label {
    color: darken(map-get($color-text, dark), 15%);
    background-color: map-get($color-background, dark);
    box-shadow: map-get($shadow-master, dark);
    
    .label-count {
        color: map-get($color-text, dark);
    }
}
.tail-select.theme-default[class*='scheme-dark'] {
    &:hover .select-label, &:focus .select-label, &.active .select-label {
        color: map-get($color-text, dark);
        box-shadow: map-get($shadow-active, dark);
    }
    &.disabled .select-label {
        box-shadow: map-get($shadow-disabled, dark);
    }
}

//
//  FIREFOX doesn't render the box-shadow on dark backgrounds properly
//  ... to fix this we use an inset box-shadow, which works way better
//
@-moz-document url-prefix() { 
    .tail-select.theme-default[class*='scheme-dark'] {
        .select-label {
            box-shadow: inset nth(map-get($shadow-master, dark), 1), nth(map-get($shadow-master, dark), 2);
        }
        &:hover .select-label, &:focus .select-label, &.active .select-label {
            box-shadow: inset nth(map-get($shadow-active, dark), 1), nth(map-get($shadow-active, dark), 2);
        }
    }
}
/* @end DARK :: LABEL */

/* @start DARK :: DROPDOWN */
.tail-select.theme-default[class*='scheme-dark'] .select-dropdown {
    color: map-get($color-text, dark);
    background-color: darken(map-get($color-background, dark), 2.5%);

    .dropdown-search {
        border-color: lighten(map-get($color-background, dark), 5%);
    }
    .dropdown-empty {
        color: darken(map-get($color-text, dark), 25%);
    }
    ul {
        li {
            color: map-get($color-text, dark);
            background-color: darken(map-get($color-background, dark), 2.5%);

            &.optgroup-title {
                color: map-get($color-text, dark);

                &.optgroup-sticky.moving {
                    background-color: lighten(map-get($color-background, dark), 2.5%);
                    box-shadow: map-get($shadow-moving, dark);
                }
            }
        }
    }
    li.dropdown-option {
        color: darken(map-get($color-text, dark), 15%);

        .option-description {
            color: fadeout(map-get($color-text, dark), 25%);
        }
        &:hover, &.hover {
            color: map-get($color-text, dark);
            background-color: fadeout(map-get($color-primary, dark), 92.5%);
        }
        &.disabled, &.hidden {
            color: fadeout(map-get($color-text, dark), 50%);
            background-color: fadeout(map-get($color-text, dark), 97.5%);

            .option-description {
                color: fadeout(map-get($color-text, dark), 60%);
            }
        }
        &.selected {
            color: map-get($color-primary, dark);

            .option-description {
                color: lighten(map-get($color-primary, dark), 15%);
            }
        }
    }
}
.tail-select.theme-default[class*='scheme-dark'] {
    &.active .select-dropdown {
        box-shadow: map-get($shadow-master, dark);
    }
}

// Dropdown States
.tail-select.theme-default[class*='scheme-dark'] {
    // State :: Normal
    .select-dropdown li.dropdown-option:before {
        &:before {
            @include icon("select", map-get($color-text, dark));
        }
    }
    &.multiple .select-dropdown li.dropdown-option {
        &:before {
            @include icon("m-select",  map-get($color-text, dark));
        }
    }

    // State :: Selected
    .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("selected", map-get($color-text, dark));
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("m-selected", map-get($color-text, dark));
        }
    }

    // State :: Deselect
    &.deselectable .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("deselect", map-get($color-text, dark));
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("m-deselect", map-get($color-text, dark));
        }
    }

    // State :: Disabled
    .select-dropdown li.dropdown-option.disabled,
    .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("disabled", map-get($color-text, dark));
        }
    }
    &.multiple .select-dropdown li.dropdown-option.disabled,
    &.multiple .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("m-disabled", map-get($color-text, dark));
        }
    }
}

// Feather Icons
.tail-select.theme-default.scheme-dark-feather {
    li.dropdown-option {
        &:before {
            width: 18px;
            height: 18px;
            margin: -9px 0 0 0;
        }
    }
    .select-dropdown li.dropdown-option {
        &:before {
            @include icon("select", map-get($color-text, dark), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option {
        &:before {
            @include icon("m-select",  map-get($color-text, dark), "feather");
        }
    }

    // State :: Selected
    .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("selected", map-get($color-text, dark), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected {
        &:before {
            @include icon("m-selected", map-get($color-text, dark), "feather");
        }
    }

    // State :: Deselect
    &.deselectable .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("deselect", map-get($color-text, dark), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.selected:not(.disabled):not(.hidden) {
        &:hover:before, &.hover:before {
            @include icon("m-deselect", map-get($color-text, dark), "feather");
        }
    }

    // State :: Disabled
    .select-dropdown li.dropdown-option.disabled,
    .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("disabled", map-get($color-text, dark), "feather");
        }
    }
    &.multiple .select-dropdown li.dropdown-option.disabled,
    &.multiple .select-dropdown li.dropdown-option.hidden {
        &:before {
            @include icon("m-disabled", map-get($color-text, dark), "feather");
        }
    }
}
/* @end DARK :: DROPDOWN */
